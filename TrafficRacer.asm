###################################################################### 
# CSCB58 Summer 2022 Project 
# University of Toronto, Scarborough 
# 
# Student Name: Klein Harrigan, Student Number: 1007647637, UTorID: harrig17 
# 
# Bitmap Display Configuration: 
# - Unit width in pixels: 8/4 (preference) 
# - Unit height in pixels: 8/4 (preference) 
# - Display width in pixels: 512/256 (preference) 
# - Display height in pixels: 512/256 (preference) 
# - Base Address for Display: 0x10008000 
# 
# Basic features that were implemented successfully 
# - Basic feature a: Number of remaining lives displayed in form of hearts at the top of screen
# - Basic feature b: Different cars move at different speeds (lamborghini faster thn tank for example)
# - Basic feature c: Displays game over screen if lives run out. Allows player to retry by pressing 'p'.
# 
# Additional features that were implemented successfully 
# - Additional feature a: Implementing pickups (extra lives and invincibility)
# - Additional feature b: Implementing live score in the form of progress bar
# - Additional feature c: Implementing more challenging second level after first is beaten 
#  
# Link to the video demo 
# - https://youtu.be/BHDcAVHpgBE
# 
# Any additional information that the TA needs to know: 
# - Hope you enjoy playing this! :)
#  
###################################################################### 
  







.data



EXTRA_GAME_SPACE: .space 20000

str: .asciiz "We game looped LOL\n" #debug print statements LOL
str2: .asciiz "Waiting for user to press p to start\n"

strips: .word 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0x00000000, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 
myCar: .word 1, 1, 1, 0xCFC532, 0xCFC532, 0xCFC532, 0xED1C24, 0xED1C24, 0xCFC532, 0xCFC532, 0xCFC532, 1, 1, 1, 1, 1, 1, 0xCFC532, 0x7F86E3, 0xED1C24, 0xED1C24, 0xED1C24, 0xED1C24, 0x7F86E3, 0xCFC532, 1, 1, 1, 1, 1, 0x000000, 0xED1C24, 0xED1C24, 0xED1C24, 0x000000, 0x000000, 0xED1C24, 0xED1C24, 0xED1C24, 0x000000, 1, 1, 1, 0x000000, 0x7F7F7F, 0xED1C24, 0xED1C24, 0x000000, 0x7F7F7F, 0x7F7F7F, 0x000000, 0xED1C24, 0xED1C24, 0x7F7F7F, 0x000000, 1, 1, 0x000000, 0x7F7F7F, 0xED1C24, 0x000000, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x000000, 0xED1C24, 0x7F7F7F, 0x000000, 1, 1, 1, 0xED1C24, 0xED1C24, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xED1C24, 0xED1C24, 1, 1, 1, 1, 0xED1C24, 0x000000, 0x000000, 0x000000, 0xED1C24, 0xED1C24, 0x000000, 0x000000, 0x000000, 0xED1C24, 1, 1, 1, 1, 0xED1C24, 0x000000, 0x7F7F7F, 0x000000, 0xED1C24, 0xED1C24, 0x000000, 0x7F7F7F, 0x000000, 0xED1C24, 1, 1, 1, 0x000000, 0xED1C24, 0x000000, 0x7F7F7F, 0x000000, 0xED1C24, 0xED1C24, 0x000000, 0x7F7F7F, 0x000000, 0xED1C24, 0x000000, 1, 1, 0x000000, 0xED1C24, 0x000000, 0x000000, 0x000000, 0xED1C24, 0xED1C24, 0x000000, 0x000000, 0x000000, 0xED1C24, 0x000000, 1, 1, 0x000000, 0xED1C24, 0xED1C24, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xED1C24, 0xED1C24, 0x000000, 1, 1, 1, 0xED1C24, 0xED1C24, 0x000000, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x000000, 0xED1C24, 0xED1C24, 1, 1, 1, 1, 1, 0xED1C24, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xED1C24, 1, 1, 1, 1, 1, 1, 0xED1C24, 0xED1C24, 0xED1C24, 0xED1C24, 0xED1C24, 0xED1C24, 0xED1C24, 0xED1C24, 1, 1, 1, 
whiteTruck: .word 1, 1, 0xFFFFFF, 0xCFC532, 0x7F86E3, 0xCFC532, 0xFFFFFF, 0xFFFFFF, 0xCFC532, 0x7F86E3, 0xCFC532, 0xFFFFFF, 1, 1, 1, 1, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 1, 1, 1, 1, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 1, 1, 1, 1, 0x000000, 0x7F7F7F, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x7F7F7F, 0x000000, 1, 1, 1, 1, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 1, 1, 1, 1, 0xFFFFFF, 0xA1A1A1, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xA1A1A1, 0xFFFFFF, 1, 1, 1, 1, 0xFFFFFF, 0xA1A1A1, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xA1A1A1, 0xFFFFFF, 1, 1, 1, 1, 0xFFFFFF, 0xA1A1A1, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xA1A1A1, 0xFFFFFF, 1, 1, 1, 1, 0xFFFFFF, 0xA1A1A1, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xA1A1A1, 0xFFFFFF, 1, 1, 1, 1, 0x000000, 0xA1A1A1, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xA1A1A1, 0x000000, 1, 1, 1, 1, 0x000000, 0xA1A1A1, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xA1A1A1, 0x000000, 1, 1, 1, 1, 0x000000, 0xA1A1A1, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xA1A1A1, 0x000000, 1, 1, 1, 1, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 1, 1, 1, 1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 1, 1, 
tank: .word 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0x0E9843, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0x0E9843, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0x0E9843, 1, 1, 1, 1, 1, 1, 1, 0x363636, 0x363636, 1, 0x25CE5C, 0x25CE5C, 0x0E9843, 0x25CE5C, 0x25CE5C, 1, 0x363636, 0x363636, 1, 1, 0x585656, 0x585656, 0x25CE5C, 0x25CE5C, 0x25CE5C, 0x0E9843, 0x25CE5C, 0x25CE5C, 0x25CE5C, 0x585656, 0x585656, 1, 1, 0x363636, 0x363636, 0x25CE5C, 0x25CE5C, 0x0E9843, 0x0E9843, 0x0E9843, 0x25CE5C, 0x25CE5C, 0x363636, 0x363636, 1, 1, 0x585656, 0x585656, 0x25CE5C, 0x0E9843, 0x0E9843, 0x0E9843, 0x0E9843, 0x0E9843, 0x25CE5C, 0x585656, 0x585656, 1, 1, 0x363636, 0x363636, 0x25CE5C, 0x0E9843, 0x077631, 0x077631, 0x077631, 0x0E9843, 0x25CE5C, 0x363636, 0x363636, 1, 1, 0x585656, 0x585656, 0x25CE5C, 0x0E9843, 0x0E9843, 0x077631, 0x0E9843, 0x0E9843, 0x25CE5C, 0x585656, 0x585656, 1, 1, 0x363636, 0x363636, 0x25CE5C, 0x25CE5C, 0x0E9843, 0x0E9843, 0x0E9843, 0x25CE5C, 0x25CE5C, 0x363636, 0x363636, 1, 1, 0x585656, 0x585656, 0x25CE5C, 0x25CE5C, 0x25CE5C, 0x25CE5C, 0x25CE5C, 0x25CE5C, 0x25CE5C, 0x585656, 0x585656, 1, 1, 0x363636, 0x363636, 1, 1, 1, 1, 1, 1, 1, 0x363636, 0x363636, 1, 
lambo: .word 1, 1, 1, 1, 1, 0xFFC90E, 0xFFC90E, 0xFFC90E, 0xFFC90E, 0xFFC90E, 1, 1, 1, 1, 1, 1, 1, 1, 0xFFC90E, 0x30302D, 0xFFF200, 0xFFF200, 0xFFF200, 0x30302D, 0xFFC90E, 1, 1, 1, 1, 1, 1, 0xFFC90E, 0xFFC90E, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFC90E, 0xFFC90E, 1, 1, 1, 1, 1, 0x000000, 0xFFC90E, 0x000000, 0x30302D, 0x30302D, 0x30302D, 0x000000, 0xFFC90E, 0x000000, 1, 1, 1, 1, 1, 0x000000, 0xFFC90E, 0x000000, 0x30302D, 0x30302D, 0x30302D, 0x000000, 0xFFC90E, 0x000000, 1, 1, 1, 1, 1, 1, 0xFFC90E, 0xFFF200, 0x000000, 0x000000, 0x000000, 0xFFF200, 0xFFC90E, 1, 1, 1, 1, 1, 1, 1, 0xFFC90E, 0x000000, 0xFFF200, 0xFFF200, 0xFFF200, 0x000000, 0xFFC90E, 1, 1, 1, 1, 1, 1, 1, 0xFFC90E, 0x000000, 0xFFF200, 0xFFF200, 0xFFF200, 0x000000, 0xFFC90E, 1, 1, 1, 1, 1, 1, 1, 0xFFC90E, 0x000000, 0xFFF200, 0xFFF200, 0xFFF200, 0x000000, 0xFFC90E, 1, 1, 1, 1, 1, 1, 1, 0xFFC90E, 0xFFF200, 0x000000, 0x30302D, 0x000000, 0xFFF200, 0xFFC90E, 1, 1, 1, 1, 1, 1, 0x000000, 0xFFC90E, 0xFFF200, 0x000000, 0x30302D, 0x000000, 0xFFF200, 0xFFC90E, 0x000000, 1, 1, 1, 1, 1, 0x000000, 0xFFC90E, 0xFFF200, 0x000000, 0x30302D, 0x000000, 0xFFF200, 0xFFC90E, 0x000000, 1, 1, 1, 1, 1, 0xFFC90E, 0xFFC90E, 0xFFC90E, 0x000000, 0x30302D, 0x000000, 0xFFC90E, 0xFFC90E, 0xFFC90E, 1, 1, 1, 1, 1, 1, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 1, 1, 1, 
motorbike: .word 1, 1, 1, 1, 1, 1, 0x000000, 0x000000, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0x3F48CC, 0x3F48CC, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0x3F48CC, 0x5487FF, 0x5487FF, 0x3F48CC, 1, 1, 1, 1, 1, 1, 1, 1, 0x30302D, 0x30302D, 0x3F48CC, 0x5487FF, 0x5487FF, 0x3F48CC, 0x30302D, 0x30302D, 1, 1, 1, 1, 1, 1, 1, 1, 0x3F48CC, 0x30302D, 0x30302D, 0x3F48CC, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0x000000, 0x3F48CC, 0x30302D, 0x30302D, 0x3F48CC, 0x000000, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0x30302D, 0x000000, 0x000000, 0x30302D, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0x30302D, 0x000000, 0x000000, 0x30302D, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0x30302D, 0x000000, 0x000000, 0x30302D, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0x3F48CC, 0x30302D, 0x30302D, 0x3F48CC, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0x3F48CC, 0x30302D, 0x30302D, 0x3F48CC, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0x3F48CC, 0x30302D, 0x30302D, 0x3F48CC, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0x3F48CC, 0x30302D, 0x30302D, 0x3F48CC, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0x000000, 0x000000, 1, 1, 1, 1, 1, 1, 
gokart: .word 1, 0x30302D, 0x720899, 0x720899, 0x720899, 0x30302D, 1, 1, 0x000000, 0x720899, 0x942CBD, 0x000000, 0x942CBD, 0x720899, 0x000000, 1, 0x000000, 0x720899, 0x942CBD, 0x000000, 0x942CBD, 0x720899, 0x000000, 1, 1, 0x720899, 0x30302D, 0x30302D, 0x30302D, 0x720899, 1, 1, 1, 0x720899, 0x30302D, 0x30302D, 0x30302D, 0x720899, 1, 1, 0x000000, 0x720899, 0x942CBD, 0x942CBD, 0x942CBD, 0x720899, 0x000000, 1, 0x000000, 0x720899, 0x720899, 0x720899, 0x720899, 0x720899, 0x000000, 1, 1, 0x720899, 0x720899, 0x720899, 0x720899, 0x720899, 1, 1, 
exlife: .word 1, 0x880015, 1, 0x880015, 1, 0x880015, 0xF75B63, 0x880015, 0xF75B63, 0x880015, 0x880015, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 1, 0x880015, 0xF75B63, 0x880015, 1, 1, 1, 0x880015, 1, 1, 
invince: .word 1, 1, 0xCFC532, 1, 1, 1, 0xCFC532, 0xFFC90E, 0xCFC532, 1, 0xCFC532, 0xFFC90E, 0x99D9EA, 0xFFC90E, 0xCFC532, 1, 0xCFC532, 0xFFC90E, 0xCFC532, 1, 1, 1, 0xCFC532, 1, 1, 
healthAndScore: .word 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x3F48CC, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x3F48CC, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x3F48CC, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 
health2AndScore: .word 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x3F48CC, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x3F48CC, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x3F48CC, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 
health1AndScore: .word 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x3F48CC, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x3F48CC, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x3F48CC, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0xED1C24, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 
health0AndScore: .word 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x3F48CC, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x3F48CC, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x3F48CC, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 0x1EE656, 
life: .word 3
score: .word 0
scoreMultiplier: .word 1
scoreColor: .word 0x3F48CC
scoreTicker: .word 0
scoreInterval: .word 5 #how nany frames before we increase score
drawIncrementer: .word 4 #array size basically
spawnTicker: .word 0 #counter for frames before spawning
spawnInterval: .word 30 #how many frames before we spawn another vehicle
recentLane: .word 0 #the last lane a car was spawned in --- starts at 0 to stand for no spawns.
invincibilityFrames: .word 0 #number of i-frames we have remaining
invincibilityTicker: .word 0 #counter to see when we should do invincibility animation (aka not draw car every x (probably other) frames)
invinciblityInterval: .word 1 #how often to draw car while invincible #1 stands for every other frame
invincibilityConstant: .word 40 #number of frames player is invincible for after pickup


#have added a 0x00000100 offset to every non gp address to allow for space before and after buffer

myCarAddress: .word 0x1000de80 # address for my car
myCarCoords: .word 32, 16 #(x, y) coordinates relative to 64x64 bg 
myCarSize: .word 14

myCarDefaultAddress: .word 0x1000de80 # default address for my car
myCarDefaultCoords: .word 32, 16 # default (x, y) coordinates relative to 64x64 bg 
myCarLeftBound: .word 0
myCarRightBound: .word 51
myCarTopBound: .word 5
myCarBottomBound: .word 50

myCarXVelocity: .word 0

myCarYVelocity: .word 0

displayBuf: .word 0x1000ce00
displayAddress: .word 0x10008000

emptyScreen: .word 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 0x7F7F7F, 
openingScreen: .word 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0xC2970A, 0xFFC90E, 0xFFC90E, 0xFFC90E, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0xC2970A, 0xFFC90E, 0xED1C24, 0xFFC90E, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0xC2970A, 0xFFC90E, 0xFFC90E, 0xFFC90E, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0xC2970A, 0xFFC90E, 0xFFF200, 0xFFC90E, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0xC2970A, 0xFFC90E, 0xFFC90E, 0xFFC90E, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0xC2970A, 0xFFC90E, 0x1EE656, 0xFFC90E, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0xC2970A, 0xFFC90E, 0xFFC90E, 0xFFC90E, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x22B14C, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x0C6624, 0x22B14C, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x00A2E8, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x0C6624, 0x0C6624, 0x0C6624, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x0C6624, 0x0C6624, 0x0C6624, 0x0C6624, 0x0C6624, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x0C6624, 0x0C6624, 0x0C6624, 0x0C6624, 0x0C6624, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x0C6624, 0x0C6624, 0x0C6624, 0x0C6624, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x9E501D, 0x9E501D, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x880015, 0x880015, 0x880015, 0x880015, 0x880015, 0x880015, 0x880015, 0x880015, 0x880015, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x9E501D, 0x9E501D, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x880015, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0x880015, 0x880015, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x9E501D, 0x9E501D, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x880015, 0x880015, 0xC40424, 0xC40424, 0xC3C3C3, 0xC3C3C3, 0xC40424, 0xC3C3C3, 0xC3C3C3, 0xC40424, 0xC40424, 0x880015, 0x880015, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x9E501D, 0x9E501D, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x99D9EA, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x880015, 0x880015, 0xC40424, 0xC40424, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC40424, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC40424, 0xC40424, 0x880015, 0x880015, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0xFF7F27, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x880015, 0x880015, 0x880015, 0x880015, 0xC40424, 0xC40424, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC40424, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC40424, 0xC40424, 0x880015, 0x880015, 0x880015, 0x880015, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x880015, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC40424, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0x880015, 0x880015, 0x880015, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xED1C24, 0xED1C24, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xA1A1A1, 0xC3C3C3, 0x880015, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0x000000, 0x000000, 0x000000, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0x000000, 0x000000, 0x000000, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0x880015, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0x880015, 0x880015, 0xC40424, 0x000000, 0x30302D, 0x30302D, 0x30302D, 0x000000, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0x000000, 0x30302D, 0x30302D, 0x30302D, 0x000000, 0xC40424, 0xC40424, 0x880015, 0x880015, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0x880015, 0x880015, 0x000000, 0x30302D, 0x000000, 0x30302D, 0x000000, 0x880015, 0x880015, 0x880015, 0x880015, 0x880015, 0x880015, 0x880015, 0x000000, 0x30302D, 0x000000, 0x30302D, 0x000000, 0x880015, 0x880015, 0x880015, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0x000000, 0x30302D, 0x30302D, 0x30302D, 0x000000, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0x000000, 0x30302D, 0x30302D, 0x30302D, 0x000000, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7112, 0xFF7112, 0xFF7112, 0xFF7112, 0xFF7112, 0xFF7112, 0xFF7112, 0xFF7112, 0xFF7112, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0x000000, 0x000000, 0x000000, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0x000000, 0x000000, 0x000000, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 0x22B14C, 
gameOverScreen: .word 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0x880015, 0xC40424, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0x5C5C57, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xFF7F27, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0x30302D, 0x30302D, 0x30302D, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xFF7F27, 0xFFC90E, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xFF7F27, 0xFFC90E, 0xFFC90E, 0xFF7F27, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xFF7F27, 0xFFC90E, 0xFFC90E, 0xFFC90E, 0xFF7F27, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xFF7F27, 0xFF7F27, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x880015, 0x880015, 0x880015, 0x880015, 0x880015, 0x880015, 0x880015, 0x880015, 0x880015, 0xFFC90E, 0xFF7F27, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xFF7F27, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xFF7F27, 0xFFC90E, 0xFF7F27, 0xFF7F27, 0xF75B63, 0xF75B63, 0x880015, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0x880015, 0x880015, 0xFF7F27, 0xF75B63, 0xF75B63, 0xF75B63, 0xFF7F27, 0xF75B63, 0xFFC90E, 0xFF7F27, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xA1A1A1, 0xA1A1A1, 0xF75B63, 0xF75B63, 0xFF7F27, 0xFFC90E, 0xFFC90E, 0xFF7F27, 0xF75B63, 0x880015, 0x880015, 0xC40424, 0xC40424, 0xC3C3C3, 0xC3C3C3, 0xC40424, 0xC3C3C3, 0xC3C3C3, 0xC40424, 0xC40424, 0x880015, 0x880015, 0xF75B63, 0xF75B63, 0xF75B63, 0xFF7F27, 0xF75B63, 0xFFC90E, 0xFF7F27, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0x30302D, 0x30302D, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xF75B63, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xDBA88C, 0xFF7F27, 0xFFC90E, 0xFFC90E, 0xFFC90E, 0xFF7F27, 0x880015, 0x880015, 0xC40424, 0xC40424, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC40424, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC40424, 0xC40424, 0x880015, 0x880015, 0xDBA88C, 0xFF7F27, 0xFFC90E, 0xFFC90E, 0xFFC90E, 0xFF7F27, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xFF7F27, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xFF7F27, 0x880015, 0x880015, 0x880015, 0x880015, 0xC40424, 0xC40424, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC40424, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC40424, 0xC40424, 0x880015, 0x880015, 0x880015, 0x880015, 0xFFC90E, 0xFF7F27, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0x880015, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC40424, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0x880015, 0x880015, 0x880015, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xED1C24, 0xED1C24, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xA1A1A1, 0xC3C3C3, 0x880015, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0x880015, 0xC40424, 0xC40424, 0xC40424, 0x000000, 0x000000, 0x000000, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0x000000, 0x000000, 0x000000, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0x880015, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0x880015, 0x880015, 0xC40424, 0x000000, 0x30302D, 0x30302D, 0x30302D, 0x000000, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0xC40424, 0x000000, 0x30302D, 0x30302D, 0x30302D, 0x000000, 0xC40424, 0xC40424, 0x880015, 0x880015, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0x880015, 0x880015, 0x000000, 0x30302D, 0x000000, 0x30302D, 0x000000, 0x880015, 0x880015, 0x880015, 0x880015, 0x880015, 0x880015, 0x880015, 0x000000, 0x30302D, 0x000000, 0x30302D, 0x000000, 0x880015, 0x880015, 0x880015, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0x000000, 0x30302D, 0x30302D, 0x30302D, 0x000000, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0x000000, 0x30302D, 0x30302D, 0x30302D, 0x000000, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7112, 0xFF7112, 0xFF7112, 0xFF7112, 0xFF7112, 0xFF7112, 0xFF7112, 0xFF7112, 0xFF7112, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0x000000, 0x000000, 0x000000, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0x000000, 0x000000, 0x000000, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xFF7F27, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xA1A1A1, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 0xDBA88C, 
levelTwoScreen: .word 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0xFFF200, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 0x3F48CC, 

SLEEP_CONSTANT: .word 16


truckAddress: .word 0x1001d000
truckCoords: .word 0, 50
truckSize: .word 14
truckYVelocity: .word 1
truckXVelocity: .word 0

truckDefaultAddress: .word 0x1001d000 # default address for my tank
truckDefaultCoords: .word 0, 50 # default (x, y) coordinates relative to 64x64 bg 
truckLeftBound: .word 0
truckRightBound: .word 51
truckTopBound: .word -400
truckBottomBound: .word 400


tankAddress: .word 0x1001de40
tankCoords: .word 16, 16
tankSize: .word 13
tankYVelocity: .word 0
tankXVelocity: .word 0

tankDefaultAddress: .word 0x1001de40 # default address for my tank
tankDefaultCoords: .word 16, 16 # default (x, y) coordinates relative to 64x64 bg 
tankLeftBound: .word 0
tankRightBound: .word 51
tankTopBound: .word -400
tankBottomBound: .word 400




lamboAddress: .word 0x1001de40
lamboCoords: .word 16, 16
lamboSize: .word 14
lamboYVelocity: .word 2
lamboXVelocity: .word 0

lamboDefaultAddress: .word 0x1001de40 # default address for my lambo
lamboDefaultCoords: .word 16, 16 # default (x, y) coordinates relative to 64x64 bg 
lamboLeftBound: .word 0
lamboRightBound: .word 51
lamboTopBound: .word -400
lamboBottomBound: .word 400






motorbikeAddress: .word 0x1001de40
motorbikeCoords: .word 16, 16
motorbikeSize: .word 14
motorbikeYVelocity: .word 3
motorbikeXVelocity: .word 0

motorbikeDefaultAddress: .word 0x1001de40 # default address for my motorbike
motorbikeDefaultCoords: .word 16, 16 # default (x, y) coordinates relative to 64x64 bg 
motorbikeLeftBound: .word 0
motorbikeRightBound: .word 51
motorbikeTopBound: .word -400
motorbikeBottomBound: .word 400




gokartAddress: .word 0x1001de40
gokartCoords: .word 16, 16
gokartSize: .word 8
gokartYVelocity: .word 2
gokartXVelocity: .word 0

gokartDefaultAddress: .word 0x1001de40 # default address for my gokart
gokartDefaultCoords: .word 16, 16 # default (x, y) coordinates relative to 64x64 bg 
gokartLeftBound: .word 0
gokartRightBound: .word 51
gokartTopBound: .word -400
gokartBottomBound: .word 400



exlifeAddress: .word 0x1001de40
exlifeCoords: .word 16, 16
exlifeSize: .word 5
exlifeYVelocity: .word 0
exlifeXVelocity: .word 0

exlifeDefaultAddress: .word 0x1001de40 # default address for my exlife
exlifeDefaultCoords: .word 16, 16 # default (x, y) coordinates relative to 64x64 bg 
exlifeLeftBound: .word 0
exlifeRightBound: .word 51
exlifeTopBound: .word -400
exlifeBottomBound: .word 400






invinceAddress: .word 0x1001de40
invinceCoords: .word 16, 16
invinceSize: .word 5
invinceYVelocity: .word 1
invinceXVelocity: .word 0

invinceDefaultAddress: .word 0x1001de40 # default address for my invince
invinceDefaultCoords: .word 16, 16 # default (x, y) coordinates relative to 64x64 bg 
invinceLeftBound: .word 0
invinceRightBound: .word 51
invinceTopBound: .word -400
invinceBottomBound: .word 400






#DRAWING ROAD STRIPS LIKE A CAR

stripsAddress: .word 0x1000ce00
stripsCoords: .word 0, 0
stripsSize: .word 64
stripsYVelocity: .word -1
stripsXVelocity: .word 0

stripsDefaultAddress: .word 0x1000ce00 # default address for my strips
stripsDefaultCoords: .word 0, 0 # default (x, y) coordinates relative to 64x64 bg 
stripsLeftBound: .word 0
stripsRightBound: .word 0
stripsTopBound: .word -3
stripsBottomBound: .word 3




booleanTrue: .word 1 #Using this to pass flags... e.g. is this my car? etc
booleanFalse: .word 0


randomLaneAddresses: .word 0x1000c000, 0x1000c040, 0x1000c080, 0x1000c0c0 #tops of lanes 1, 2 3 and 4

#vehicle integer id's
#truck - 0
#tank - 1
#lambo - 2
#motorbike - 3
#gokart - 4
#extraLife - 5
#invincibility - 6



#sound effects maybe?
##pitch: .byte 65, 
##duration: .byte 100
##instrument: .byte 60
##volume: .byte 100













.text
.globl main

main:


##li $t6 5
##li $t7 0


MUSIC:

##li $v0, 31 
##la $t0, pitch($t7)
##la $t1, duration 
##la $t2, instrument
##la $t3, volume 
##move $a0, $t0 
##move $a1, $t1 
##move $a2, $t2
##move $a3, $t3 
##syscall 


#LOAD OPENING SCREEN


#wait for q or p to be pressed
la $t0 openingScreen
sw $t0 -4($sp)
lw $t0 displayAddress
sw $t0 -8($sp)
li $t0 4096
sw $t0 -12($sp)
addi $sp $sp -12
jal DRAW_BG

li $v0, 4
la $a0, str2 #loads the address of the string str ("we are game looping LOL") into a0
syscall 

OPENING_SCREEN_LOOP:



jal CHECK_KEYBOARD2

j OPENING_SCREEN_LOOP

START_GAME:

#load address of empty screen and buffer to be drawn on by draw bg function
lw $t0 displayBuf 
la $t8 emptyScreen

#puts arguments on stack

sw $t8 -4($sp)
sw $t0 -8($sp)
li $t0 4096
sw $t0 -12($sp)


#decrement sp

addi $sp $sp -12

#run function draw bg and set ra to PC+4

jal DRAW_BG

GAME_LOOP:

#debug
li $v0, 4
la $a0, str #loads the address of the string str ("we are game looping LOL") into a0
syscall   #loading 4 into v0 tells syscall the required function is print whataver is at the address stored in a0
		
#end debug

#DRAW STRIPS

#Draw Strips

lw $t1 booleanTrue
addi $t1 $t1 1 #set t1 to 2 to tell function this is strips
sw $t1 -8($sp)

lw $t1 stripsCoords
sw $t1 -12($sp)

lw $t1 stripsAddress
sw $t1 -16($sp)

la $t1 strips
sw $t1 -20($sp)


lw $t1 stripsSize
sw $t1 -24($sp)

addi $sp $sp -24

jal DRAW_MY_CAR


#Draw cars




#draw exlife


lw $t1 booleanFalse
sw $t1 -4($sp)

lw $t1 exlifeCoords
sw $t1 -8($sp)


lw $t1 exlifeAddress
sw $t1 -12($sp)

la $t1 exlife
sw $t1 -16($sp)


lw $t1 exlifeSize
sw $t1 -20($sp)

addi $sp $sp -20

jal DRAW_MY_CAR



#draw invince


lw $t1 booleanFalse
sw $t1 -4($sp)

lw $t1 invinceCoords
sw $t1 -8($sp)


lw $t1 invinceAddress
sw $t1 -12($sp)

la $t1 invince
sw $t1 -16($sp)


lw $t1 invinceSize
sw $t1 -20($sp)

addi $sp $sp -20

jal DRAW_MY_CAR

#draw my car


lw $t1 booleanTrue #to say this is my car ...aka special behaviour plz
sw $t1 -4($sp)

lw $t1 myCarCoords
sw $t1 -8($sp)

lw $t1 myCarAddress #puts address of car on stack
sw $t1 -12($sp)



la $t1 myCar #puts address of car image on sstack
sw $t1 -16($sp)

lw $t1 myCarSize #puts size of car image on stack
sw $t1 -20($sp)

addi $sp $sp -20

jal DRAW_MY_CAR


#DRAW White Truck

lw $t1 booleanFalse
sw $t1 -4($sp)

lw $t1 truckCoords
sw $t1 -8($sp)

lw $t1 truckAddress
sw $t1 -12($sp)

la $t1 whiteTruck
sw $t1 -16($sp)

lw $t1 truckSize
sw $t1 -20($sp)

addi $sp $sp -20

jal DRAW_MY_CAR


#Draw Tank

lw $t1 booleanFalse
sw $t1 -4($sp)

lw $t1 tankCoords
sw $t1 -8($sp)


lw $t1 tankAddress
sw $t1 -12($sp)

la $t1 tank
sw $t1 -16($sp)


lw $t1 tankSize
sw $t1 -20($sp)

addi $sp $sp -20

jal DRAW_MY_CAR



#Draw lambo

lw $t1 booleanFalse
sw $t1 -4($sp)

lw $t1 lamboCoords
sw $t1 -8($sp)


lw $t1 lamboAddress
sw $t1 -12($sp)

la $t1 lambo
sw $t1 -16($sp)


lw $t1 lamboSize
sw $t1 -20($sp)

addi $sp $sp -20

jal DRAW_MY_CAR


#draw motorbike

lw $t1 booleanFalse
sw $t1 -4($sp)

lw $t1 motorbikeCoords
sw $t1 -8($sp)


lw $t1 motorbikeAddress
sw $t1 -12($sp)

la $t1 motorbike
sw $t1 -16($sp)


lw $t1 motorbikeSize
sw $t1 -20($sp)

addi $sp $sp -20

jal DRAW_MY_CAR


#draw gokart


lw $t1 booleanFalse
sw $t1 -4($sp)

lw $t1 gokartCoords
sw $t1 -8($sp)


lw $t1 gokartAddress
sw $t1 -12($sp)

la $t1 gokart
sw $t1 -16($sp)


lw $t1 gokartSize
sw $t1 -20($sp)

addi $sp $sp -20
jal DRAW_MY_CAR






#DRAW HEALTH INFO

#load address of empty screen and buffer to be drawn on by draw bg function
lw $t0 displayBuf 


#Load life, then match with corresponding health bar
lw $t1 life
li $t2 3

la $t8 healthAndScore
beq $t1 $t2 FOUND_LIFE

addi $t2 $t2 -1

la $t8 health2AndScore
beq $t1 $t2 FOUND_LIFE

addi $t2 $t2 -1

la $t8 health1AndScore
beq $t1 $t2 FOUND_LIFE

addi $t2 $t2 -1

la $t8 health0AndScore
beq $t1 $t2 FOUND_LIFE



#puts arguments on stack

FOUND_LIFE:

sw $t8 -4($sp)
sw $t0 -8($sp)
li $t0 320
sw $t0 -12($sp)


#decrement sp

addi $sp $sp -12

#run function draw bg and set ra to PC+4

jal DRAW_BG


#Now to fill in score bar

jal FILL_SCORE




#MOV BUFFER ONTO DISPLAY

lw $t0 displayAddress 
lw $t8 displayBuf

#puts arguments on stack

sw $t8 -4($sp)
sw $t0 -8($sp)
li $t0 4096
sw $t0 -12($sp)

#decrement sp

addi $sp $sp -12

#run function draw bg and set ra to PC+4

jal DRAW_BG


#HANDLE COLLISIONS HERE
#plan : modular function with arguments as follows
#argument 1: car bg address
#argument 2: car address
#argument 3: car size
#argument 4: power_up vs my car flag ... power up == 0, my car == 1
#argument 5: x coordinate to check if i should go through things backwards


lw $t0 exlifeCoords
sw $t0 -4($sp)
lw $t0 booleanFalse
sw $t0 -8($sp)
lw $t0 exlifeSize
sw $t0 -12($sp)
lw $t0 exlifeAddress
subi $t0 $t0 0x4E00
sw $t0 -16($sp)
la $t0 exlife
sw $t0 -20($sp)
addi $sp $sp -20


jal COLLISION_HANDLER

lw $t0 ($sp)
addi $sp $sp 4 #if t0 is not 0 then collision... otherwise no collision
beqz $t0 NO_COLLIDE_WITH_EXLIFE
lw $t1 exlifeDefaultAddress #moves exlife back to default address of screen and increments life bar if it is below 3
sw $t1 exlifeAddress
lw $t1 invincibilityFrames
addi $t1 $t1 1
sw $t1 invincibilityFrames
lw $t1 life
bge $t1 3 NO_COLLIDE_WITH_EXLIFE
addi $t1 $t1 1
sw $t1 life



NO_COLLIDE_WITH_EXLIFE:

#check invincibility collisions
lw $t0 invinceCoords
sw $t0 -4($sp)
lw $t0 booleanFalse
sw $t0 -8($sp)
lw $t0 invinceSize
sw $t0 -12($sp)
lw $t0 invinceAddress
subi $t0 $t0 0x4E00
sw $t0 -16($sp)
la $t0 invince
sw $t0 -20($sp)
addi $sp $sp -20


jal COLLISION_HANDLER

lw $t0 ($sp)
addi $sp $sp 4 #if t0 is not 0 then collision... otherwise no collision
beqz $t0 NO_COLLIDE_WITH_INVINCE
lw $t1 invinceDefaultAddress
sw $t1 invinceAddress #moves powerup off screen
lw $t1 invincibilityConstant #gets standard length of invinciblity and sets invincibility frames to it
sw $t1 invincibilityFrames

NO_COLLIDE_WITH_INVINCE:
#check my car collisions


la $t0 myCar
sw $t0 -20($sp)
lw $t0 myCarAddress
subi $t0 $t0 0x4E00
sw $t0 -16($sp)
lw $t0 myCarSize
sw $t0 -12($sp)
lw $t0 booleanTrue
sw $t0 -8($sp)
lw $t0 myCarCoords
sw $t0 -4($sp)
addi $sp $sp -20

jal COLLISION_HANDLER


lw $t0 ($sp)
addi $sp $sp 4 #if t0 is not 0 then collision... otherwise no collision
beqz $t0 NO_COLLIDE_WITH_MY_CAR
lw $t7 life
subi $t7 $t7 1
sw $t7 life #decrement life
sw $0 score #reset score

#reset position
lw $t1 myCarDefaultAddress
sw $t1 myCarAddress
lw $t1 myCarDefaultCoords
sw $t1 myCarCoords
lw $t1 myCarDefaultCoords+4
sw $t1 myCarCoords+4
#give 20 invinciblity frames
li $t1 20
sw $t1 invincibilityFrames
#reset x velocity
sw $0 myCarXVelocity
#if speed is above 0... simulate s presses on keyboard until it is at 0
lw $t7 myCarYVelocity
li $t8 0
ble  $t7 $t8 END_DECREASE_VELOCITY_LOOP2
DECREASE_VELOCITY_LOOP2:
lw $t7 myCarYVelocity #loads current velocity for respond to s function to decrease it until it hits base value of 2
li $t8 0
beq $t7 $t8 END_DECREASE_VELOCITY_LOOP2


jal RESPOND_TO_s

j DECREASE_VELOCITY_LOOP2

END_DECREASE_VELOCITY_LOOP2:




NO_COLLIDE_WITH_MY_CAR:










#SLEEP

jal SLEEP_FRAMES


lw $t4 life
beq $t4 $0 GAME_OVER #if lives are zero go to game over

li $t0 109 #total number of pixels to fill
lw $t4 score
beq $t4 $t0 LEVEL_TWO # if score is max go to level two


#Get Keyboard Input

jal CHECK_KEYBOARD






#PLAN Combine recalculate erase and save new address functions into one
#big modularized one so i can reuse it for each car


#Calculate new positions

#MY CAR

addi $sp $sp -4
lw $t1 myCarSize
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 myCarAddress
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 booleanTrue
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 myCarDefaultAddress
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 myCarDefaultCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 myCarDefaultCoords+4
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 myCarLeftBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 myCarTopBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 myCarRightBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 myCarBottomBound
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 booleanTrue #is my car
sw $t1 ($sp)




addi $sp $sp -4
lw $t1 myCarAddress
sw $t1 ($sp)

addi $sp $sp -4 #push x pos of car on stack
lw $t1 myCarCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 myCarCoords+4 #push y pos of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 myCarXVelocity #push x velocity of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 myCarYVelocity #push y velocity of car on stack
sw $t1 ($sp)


jal CALCULATE_CAR_POSITION

lw $s1 ($sp) #contains new address of car
addi $sp $sp 4 #pop stack

lw $s2 ($sp) #contains new y coordinate of car
addi $sp $sp 4 #pop stack

lw $s3 ($sp) #contains new x coordinate of car
addi $sp $sp 4 #pop stack



sw $s1 myCarAddress
sw $s2 myCarCoords
sw $s3 myCarCoords+4



# CALC MY TRUCK



addi $sp $sp -4
lw $t1 truckSize
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 truckAddress
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 booleanFalse #not my car
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 truckDefaultAddress
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 truckDefaultCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 truckDefaultCoords+4
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 truckLeftBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 truckTopBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 truckRightBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 truckBottomBound
sw $t1 ($sp)



addi $sp $sp -4
lw $t1 booleanFalse #not my car
sw $t1 ($sp)




addi $sp $sp -4
lw $t1 truckAddress
sw $t1 ($sp)

addi $sp $sp -4 #push x pos of car on stack
lw $t1 truckCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 truckCoords+4 #push y pos of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 truckXVelocity #push x velocity of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 truckYVelocity #push y velocity of car on stack
sw $t1 ($sp)


jal CALCULATE_CAR_POSITION

lw $s1 ($sp) #contains new address of car
addi $sp $sp 4 #pop stack

lw $s2 ($sp) #contains new x coordinate of car
addi $sp $sp 4 #pop stack

lw $s3 ($sp) #contains new y coordinate of car
addi $sp $sp 4 #pop stack



sw $s1 truckAddress
sw $s2 truckCoords
sw $s3 truckCoords+4



#CALC MY TANK


addi $sp $sp -4
lw $t1 tankSize
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 tankAddress
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 booleanFalse #not my car
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 tankDefaultAddress
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 tankDefaultCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 tankDefaultCoords+4
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 tankLeftBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 tankTopBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 tankRightBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 tankBottomBound
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 booleanFalse #not my car
sw $t1 ($sp)



addi $sp $sp -4
lw $t1 tankAddress
sw $t1 ($sp)

addi $sp $sp -4 #push x pos of car on stack
lw $t1 tankCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 tankCoords+4 #push y pos of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 tankXVelocity #push x velocity of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 tankYVelocity #push y velocity of car on stack
sw $t1 ($sp)


jal CALCULATE_CAR_POSITION

lw $s1 ($sp) #contains new address of car
addi $sp $sp 4 #pop stack

lw $s2 ($sp) #contains new x coordinate of car
addi $sp $sp 4 #pop stack

lw $s3 ($sp) #contains new y coordinate of car
addi $sp $sp 4 #pop stack



sw $s1 tankAddress
sw $s2 tankCoords
sw $s3 tankCoords+4





#CALC MY TANK


addi $sp $sp -4
lw $t1 lamboSize
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 lamboAddress
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 booleanFalse #not my car
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 lamboDefaultAddress
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 lamboDefaultCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 lamboDefaultCoords+4
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 lamboLeftBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 lamboTopBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 lamboRightBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 lamboBottomBound
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 booleanFalse #not my car
sw $t1 ($sp)



addi $sp $sp -4
lw $t1 lamboAddress
sw $t1 ($sp)

addi $sp $sp -4 #push x pos of car on stack
lw $t1 lamboCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 lamboCoords+4 #push y pos of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 lamboXVelocity #push x velocity of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 lamboYVelocity #push y velocity of car on stack
sw $t1 ($sp)


jal CALCULATE_CAR_POSITION

lw $s1 ($sp) #contains new address of car
addi $sp $sp 4 #pop stack

lw $s2 ($sp) #contains new x coordinate of car
addi $sp $sp 4 #pop stack

lw $s3 ($sp) #contains new y coordinate of car
addi $sp $sp 4 #pop stack



sw $s1 lamboAddress
sw $s2 lamboCoords
sw $s3 lamboCoords+4







#CALC MY MOTORBIKE

addi $sp $sp -4
lw $t1 motorbikeSize
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 motorbikeAddress
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 booleanFalse #not my car
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 motorbikeDefaultAddress
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 motorbikeDefaultCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 motorbikeDefaultCoords+4
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 motorbikeLeftBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 motorbikeTopBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 motorbikeRightBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 motorbikeBottomBound
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 booleanFalse #not my car
sw $t1 ($sp)



addi $sp $sp -4
lw $t1 motorbikeAddress
sw $t1 ($sp)

addi $sp $sp -4 #push x pos of car on stack
lw $t1 motorbikeCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 motorbikeCoords+4 #push y pos of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 motorbikeXVelocity #push x velocity of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 motorbikeYVelocity #push y velocity of car on stack
sw $t1 ($sp)


jal CALCULATE_CAR_POSITION

lw $s1 ($sp) #contains new address of car
addi $sp $sp 4 #pop stack

lw $s2 ($sp) #contains new x coordinate of car
addi $sp $sp 4 #pop stack

lw $s3 ($sp) #contains new y coordinate of car
addi $sp $sp 4 #pop stack



sw $s1 motorbikeAddress
sw $s2 motorbikeCoords
sw $s3 motorbikeCoords+4








#CALC MY GOKART


addi $sp $sp -4
lw $t1 gokartSize
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 gokartAddress
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 booleanFalse #not my car
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 gokartDefaultAddress
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 gokartDefaultCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 gokartDefaultCoords+4
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 gokartLeftBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 gokartTopBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 gokartRightBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 gokartBottomBound
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 booleanFalse #not my car
sw $t1 ($sp)



addi $sp $sp -4
lw $t1 gokartAddress
sw $t1 ($sp)

addi $sp $sp -4 #push x pos of car on stack
lw $t1 gokartCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 gokartCoords+4 #push y pos of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 gokartXVelocity #push x velocity of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 gokartYVelocity #push y velocity of car on stack
sw $t1 ($sp)


jal CALCULATE_CAR_POSITION

lw $s1 ($sp) #contains new address of car
addi $sp $sp 4 #pop stack

lw $s2 ($sp) #contains new x coordinate of car
addi $sp $sp 4 #pop stack

lw $s3 ($sp) #contains new y coordinate of car
addi $sp $sp 4 #pop stack



sw $s1 gokartAddress
sw $s2 gokartCoords
sw $s3 gokartCoords+4






#CALC MY exlife


addi $sp $sp -4
lw $t1 exlifeSize
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 exlifeAddress
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 booleanFalse #not my car
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 exlifeDefaultAddress
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 exlifeDefaultCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 exlifeDefaultCoords+4
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 exlifeLeftBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 exlifeTopBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 exlifeRightBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 exlifeBottomBound
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 booleanFalse #not my car
sw $t1 ($sp)



addi $sp $sp -4
lw $t1 exlifeAddress
sw $t1 ($sp)

addi $sp $sp -4 #push x pos of car on stack
lw $t1 exlifeCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 exlifeCoords+4 #push y pos of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 exlifeXVelocity #push x velocity of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 exlifeYVelocity #push y velocity of car on stack
sw $t1 ($sp)


jal CALCULATE_CAR_POSITION

lw $s1 ($sp) #contains new address of car
addi $sp $sp 4 #pop stack

lw $s2 ($sp) #contains new x coordinate of car
addi $sp $sp 4 #pop stack

lw $s3 ($sp) #contains new y coordinate of car
addi $sp $sp 4 #pop stack



sw $s1 exlifeAddress
sw $s2 exlifeCoords
sw $s3 exlifeCoords+4




#CALC MY INVINCE


addi $sp $sp -4
lw $t1 invinceSize
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 invinceAddress
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 booleanFalse #not my car
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 invinceDefaultAddress
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 invinceDefaultCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 invinceDefaultCoords+4
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 invinceLeftBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 invinceTopBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 invinceRightBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 invinceBottomBound
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 booleanFalse #not my car
sw $t1 ($sp)



addi $sp $sp -4
lw $t1 invinceAddress
sw $t1 ($sp)

addi $sp $sp -4 #push x pos of car on stack
lw $t1 invinceCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 invinceCoords+4 #push y pos of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 invinceXVelocity #push x velocity of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 invinceYVelocity #push y velocity of car on stack
sw $t1 ($sp)


jal CALCULATE_CAR_POSITION

lw $s1 ($sp) #contains new address of car
addi $sp $sp 4 #pop stack

lw $s2 ($sp) #contains new x coordinate of car
addi $sp $sp 4 #pop stack

lw $s3 ($sp) #contains new y coordinate of car
addi $sp $sp 4 #pop stack



sw $s1 invinceAddress
sw $s2 invinceCoords
sw $s3 invinceCoords+4




#CALC STRIPS

addi $sp $sp -4
lw $t1 stripsSize
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 stripsAddress
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 booleanFalse #not my car
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 stripsDefaultAddress
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 stripsDefaultCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 stripsDefaultCoords+4
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 stripsLeftBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 stripsTopBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 stripsRightBound
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 stripsBottomBound
sw $t1 ($sp)


addi $sp $sp -4
lw $t1 booleanTrue 
addi $t1 $t1 1 #setting it to 2 so that i can make it's movement special
sw $t1 ($sp)




addi $sp $sp -4
lw $t1 stripsAddress
sw $t1 ($sp)

addi $sp $sp -4 #push x pos of car on stack
lw $t1 stripsCoords
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 stripsCoords+4 #push y pos of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 stripsXVelocity #push x velocity of car on stack
sw $t1 ($sp)

addi $sp $sp -4
lw $t1 stripsYVelocity #push y velocity of car on stack
sw $t1 ($sp)


jal CALCULATE_CAR_POSITION

lw $s1 ($sp) #contains new address of car
addi $sp $sp 4 #pop stack

lw $s2 ($sp) #contains new x coordinate of car
addi $sp $sp 4 #pop stack

lw $s3 ($sp) #contains new y coordinate of car
addi $sp $sp 4 #pop stack



sw $s1 stripsAddress
sw $s2 stripsCoords
sw $s3 stripsCoords+4


jal HANDLE_SPAWNS










jal INVINCIBILITY_HANDLER

j GAME_LOOP




























#BEGIN BLOCK DRAW BG

DRAW_BG: #used to draw initial screen and move buffer to display depending on what's on stack


addi $t4 $0 0
addi $t5 $0 4

lw $t2 ($sp) #load size of bg array
lw $t0 4($sp) #load address to be copied to onto stack
lw $t8 8($sp) #load address to be copied from onto stack


addi $sp $sp 12


LOOP:

beq $t4 $t2 DONE #branch to done when all 256x256 px are painted


mult $t4 $t5 #t5 is size constant, in this case 4 for 4 bytes
mflo $t6

addu $t7 $t8 $t6 #t8 is address of main bg array
addu $t6 $t0 $t6 #t0 is mem address of display map




lw $t1, ($t7) #loads pixel from bg array into t1
sw $t1, ($t6)  # paint position t6 the colour stored in t1

addi $t4 $t4 1 #incrementer

j LOOP


DONE:

jr $ra

#END BLOCK



FILL_SCORE:
lw $t0 score
lw $t1 displayBuf
lw $t3 scoreColor
li $t4 0
lw $t5 scoreMultiplier
li $t6 1 #modulo 3 checker
li $t7 3


addi $t2 $t1 1016 
addi $t1 $t1 360

#store display address offset in t1
#store final pixel address in t2

FILL_LOOP:
beq $t4 $t0 DONE_FILLING  #done when incrementer reaches score

sw $t3 ($t1)
addi $t4 $t4 1

beq $t6 $t7 NEXT_COL
addi $t1 $t1 256
addi $t6 $t6 1

j FILL_LOOP

NEXT_COL:
subi $t1 $t1 512 #go back 2 rows
addi $t1 $t1 4 #go forward 1 column
li $t6 1
j FILL_LOOP

DONE_FILLING:

lw $t8 scoreTicker
lw $t9 scoreInterval

blt $t8 $t9 NOT_SCORE_FRAME
li $t8 0 #if it is a score frame then reset score ticker and update score + bar
sw $t8 scoreTicker


lw $t6 score
addi $t6 $t6 1
sw $t6 score
jr $ra
NOT_SCORE_FRAME: #if not a score frame increment ticker and return
addi $t8 $t8 1
sw $t8 scoreTicker
jr $ra




























DRAW_MY_CAR:

lw $s6 drawIncrementer



lw $t6 ($sp) #gets size of car from stack
mult $t6 $t6 #squares number b/c every hitbox is square by developer choice
mflo $t9

li $t1 4

mult $t1 $t9
mflo $t9



lw $t8 4($sp) #gets address of car img from stack
lw $t0 8($sp) #gets car addres from stack



addi $t4 $0 0

addi $t2 $0 0 #t2 stores a count for if we get to the 64th pixel
#at that point we have to go to the next line --- aka ahead 256-64 px
addi $t3 $0 0 #second counter for car array indexing

lw $t1 12($sp) #gets x coordinate of car from stack
lw $t5 16($sp) #gets is this my car flag from stack
beq $t5 2 NON_FLIP_IMG #go to non flip image if we are working with strips
bnez $t5 MY_CAR_SHENANIGANS
li $t5 32 #midway point of screen
bge $t1 $t5 NON_FLIP_IMG


move $t7 $t9
move $t9 $t3 #swaps t3 and t9
move $t3 $t7
sub $s6 $0 $s6 #multiply s6 by negative 1( by subtracting itself from 0 LOL just like the quiz) 
subi $t3 $t3 4
subi $t9 $t9 4 #subtracts 4 from each of these to fit with 0 indexed arrays

j NON_FLIP_IMG

MY_CAR_SHENANIGANS:
#check invincibility frames and ticker
lw $t7 invincibilityFrames
beqz $t7 NON_FLIP_IMG #if we have 0 invinciblity frames proceed to drawing as normal
#otherwise do not draw
lw $t7 invincibilityTicker
bnez $t7 INVINCE_TICKER_GOOD
#if ticker is not ready incrememnt it, increment sp and go home
addi $t7 $t7 1
sw $t7 invincibilityTicker
addi $sp $sp 20 #increments stack pointer
jr $ra
INVINCE_TICKER_GOOD:
#otherwise set ticker to 0 and resume drawing
li $t7 0
sw $t7 invincibilityTicker


NON_FLIP_IMG:
addi $sp $sp 20 #increments stack pointer

MY_CAR_LOOP:

beq $t3 $t9 DONE_DRAWING_MY_CAR #branch to done when all 256x256 px are painted


addu $t7 $t8 $t3 #t8 is address of my car array



addu $t5 $t0 $t4 #t0 is mem address of display map




lw $t1, ($t7) #loads pixel from my_car array into t1


beq $t1 1 MY_CAR_TRANSPARENT #does not paint transparent pixel
bgt $t5 0x10010F00 MY_CAR_TRANSPARENT #does not paint ahead of buffer
blt $t5 0x1000ce00 MY_CAR_TRANSPARENT #does not paint behind buffer
sw  $t1, ($t5)  # paint position t6 the colour stored in t1
MY_CAR_TRANSPARENT:
add $t4 $t4 4 #incrementer
add $t3 $t3 $s6 #increment/decrement by 4/-4
addi $t2 $t2 1




bne $t2, $t6 MY_CAR_DONT_SKIP_ROW
addi $t2 $0 0


addi $t1 $0 64
sub $t1 $t1 $t6
li $t5 4
mult $t1 $t5
mflo $t1
add $t4 $t4 $t1

MY_CAR_DONT_SKIP_ROW:

j MY_CAR_LOOP


DONE_DRAWING_MY_CAR:
jr $ra




#ERASE CAR

ERASE_CAR:



lw $t8 ($sp) #gets address of car img from stack
lw $t0 4($sp) #gets car addres from stack
lw $t9 8($sp) #gets size of car from stack

addi $sp $sp 12 #increments stack pointer


addi $t4 $0 0
addi $t5 $0 4
addi $t3 $0 0
addi $t2 $0 0 #t2 stores a count for if we get to the 14th pixel
#at that point we have to go to the next line --- aka ahead 64-14 px

mult $t9 $t9
mflo $s7 #puts size of car squared in t9

ERASE_CAR_LOOP:

beq $t3 $s7 DONE_ERASING_CAR #branch to done when all 14x14 px are painted

mult $t4 $t5 #t5 is size constant, in this case 4 for 4 bytes
mflo $t6

addu $t7 $t8 $t6 #t8 is address of my bg array

addu $t6 $t0 $t6 #t0 is mem address of display map




lw $t1, ($t7) #loads pixel from bg array into t1


bgt $t6 0x10010F00 OOB_ERASE #does not paint ahead of buffer
blt $t6 0x1000ce00 OOB_ERASE #branches to stop out of bound erase

sw  $t1, ($t6)  # paint position t6 (on display map) the colour stored in t1
j DONE_OOB

OOB_ERASE:
move $s4 $t6

DONE_OOB:

addi $t4 $t4 1 #incrementer
addi $t3 $t3 1
addi $t2 $t2 1



bne $t2, $t9 ERASE_CAR_DONT_SKIP_ROW
addi $t2 $0 0
addi $t4 $t4 64
sub $t4 $t4 $t9

ERASE_CAR_DONT_SKIP_ROW:

j ERASE_CAR_LOOP


DONE_ERASING_CAR:
jr $ra

#END BLOCK




CALCULATE_CAR_POSITION:



lw $t2 ($sp)  #loads y velocity from stack


lw $t1 4($sp) #loads x velocity from stack


lw $t4 8($sp) #loads y coordinate from stack


lw $t5 12($sp) #loads x coordinate from stack

lw $t0 16($sp) #loads car address from stack


#calculating new coordinates first... simply add velocity to old coordinates
add $t5 $t5 $t1 #add x velocity to x coord

lw $t6 20($sp) #loads the if this is my car flag
addi $sp $sp 24

li $t3 2 
beq $t6 $t3 SLOW_DOWN #do normal operation if we are dealing with strips

beqz $t6 ANOTHER_LOVER_CAR


li $t3 5
li $t7 0
blt $t2 $t7 SLOW_DOWN #moves car back if speed at -2 or lower
blt $t2 $t3 LEAVE_Y_ALONE #only moves if velocity is 3 or higher or 1/lower
addi $t4 $t4 4 #"subtracts" 2 from velocity to make movement smaller 

SLOW_DOWN: 

sub $t4 $t4 $t2 #add y velocity to y coord


j LEAVE_Y_ALONE


ANOTHER_LOVER_CAR:

li $t7 32 #32 is value for middle of road
blt $t5 $t7 MOVE_NEGATIVE #switch to moving negatively if in opposing lane 
sub $t4 $t4 $t2 #add y velocity to y coord

j LEAVE_Y_ALONE

MOVE_NEGATIVE:

bge $t2 1 NO_NEED_TO_SET_BASE_VELOCITY #if y velocity for car moving in opposite lane is less than 1 then set it to 1
li $t2 1
NO_NEED_TO_SET_BASE_VELOCITY:

add $t4 $t4 $t2



#check if x cord is less than 32, if so we need to move car in opposite direction


LEAVE_Y_ALONE:

#basic y velocity starts at 2... at this level car stays same pos
#if velocity is one move y position back by 1 pixel per frame
#if velocity is 3 move by 2 pixels per frame
#if velocity is 4 move by 3 pixels per frame

#recall to move down we keep number positive... to move forward we keep number negative


#basic x velocity starts at 0 for no x movement
#if x velocity is 1 head right 1px per frame
#if x velocity is -1 head left  1px per frame

#in essence new address = old address + 4(x velocity) + -(4*64)(y velocity)
li $t3 2 
beq $t6 $t3 STRIP_ADDRESS_HANDLER #do normal operation if we are dealing with strips
beqz $t6 ANOTHER_LOVER_CAR2

li $t3 5
li $t7 0
blt $t2 $t7 STRIP_ADDRESS_HANDLER #moves car back if speed is at 1 or lower
blt $t2 $t3 LEAVE_Y_ALONE2 #only moves if velocity is 3 or higher or 1/lower
addi $t0 $t0 1024 #"subtracts" 2 from velocity to make movement smaller 
j STRIP_ADDRESS_HANDLER
SLOW_DOWN2:
ANOTHER_LOVER_CAR2:
addi $t3 $0 -256 #(-4*64)

mult $t3 $t2
mflo $t3  #-(4*64)(y velocity)

li $t7 32
blt $t5 $t7 MOVE_NEGATIVE2 #subtract y difference from address if we are on left half of road (aka x coord (t1) < 32 (t7))
add $t0 $t0 $t3 #add to address

j LEAVE_Y_ALONE2

STRIP_ADDRESS_HANDLER:
addi $t3 $0 -256 #(-4*64)

mult $t3 $t2
mflo $t3  #-(4*64)(y velocity)
add $t0 $t0 $t3 #add to address

j LEAVE_Y_ALONE2

MOVE_NEGATIVE2:
sub $t0 $t0 $t3


LEAVE_Y_ALONE2:


addi $t3 $0 4
mult $t3 $t1
mflo $t3 #4(x velocity)
add $t0 $t0 $t3






#NOW NEED TO RUN COLLISSION CHECKS
#recall $t5 is x coord and $t4 is y coord

##CHECKS FOR COLLISION WITH SCREEN EDGES 
#Currently assumes car size is 14 x 13 but might make it adjustable if I implement the car shrinking powerup

lw $t6 ($sp) #BOTTOM BOUND
lw $t7 4($sp) #RIGHT BOUND
lw $t8 8($sp)  #TOP BOUND
lw $t9 12($sp)  #LEFT BOUND
addi $sp $sp 16
#Loads addresses of boundaries off of stack


blt $t4 $t8 RESET_POS
blt $t5 $t9 RESET_POS
bgt $t4 $t6 RESET_POS
bgt $t5 $t7 RESET_POS

#since reset pos moves stack bby 12 if we don't go there i need to mirror movement here
addi $sp $sp 16



##CHECKS FOR COLLISION WITH OTHER VEHICLES



SET_COORD_STACK:

lw $t1 ($sp) # loads myCarAddress to do the erasing calculation
addi $sp $sp 4

lw $t2($sp) #loads size of car for erasing calculation
addi $sp $sp 4



add $s0 $0 $t4 #set s0 to y coord
add $s1 $0 $t5 #set s1 to x coord
add $s2 $0 $t0 #set s2 to new car address






beq $t0 $t1 DO_NOT_MOVE_MY_CAR


addi $sp $sp -4
sw $ra ($sp) #puts original return address on stack since we're gonna do a nested call



addi $sp $sp -4
sw $t2 ($sp)#puts size of car on stack



addi $sp $sp -4
sw $t1 ($sp)#puts old address of car on stack






lw $t2 displayBuf #loads address of display
sub  $t3 $t1 $t2 #gets offset of car from display

la $t4 emptyScreen #gets offset translated into position in bg array
add $t4 $t4 $t3 


addi $sp $sp -4
sw $t4 ($sp) #stores bg array address to redraw it over the car instead of redoing whole screen



jal ERASE_CAR

lw $ra ($sp) # loads original return address before nested call off of stack
addi $sp $sp 4

DO_NOT_MOVE_MY_CAR:

addi $sp $sp -4 #push y coord onto stack
sw $s0 ($sp)

addi $sp $sp -4 #push x coord onto stack
sw $s1 ($sp)


addi $sp $sp -4 #push new car address onto stack
sw $s2 ($sp)



jr $ra #jump and return

RESET_POS:

lw $t4 ($sp)  #myCarDefaultCoords
lw $t5  4($sp) #myCarDefaultCoords+4

lw $t0 8($sp) # myCarDefaultAddress
lw $t6 12($sp) # is this my car flag

beqz $t6 NOT_MY_MOTOR

addi $sp $sp 16

#If it is my car that needs its position reset we need to subtract the number of lives and then reset the speed of every object
lw $t7 life
subi $t7 $t7 1
sw $t7 life
sw $0 score #reset score

#Need to push needed temporary registers (t4, t5, t0, ra) onto stack before nested function call

sw $ra -4($sp)
sw $t4 -8($sp)
sw $t5 -12($sp)
sw $t0 -16($sp)
addi $sp $sp -16

lw $t7 myCarYVelocity
li $t8 0
blt $t7 $t8 END_DECREASE_VELOCITY_LOOP
DECREASE_VELOCITY_LOOP:
lw $t7 myCarYVelocity #loads current velocity for respond to s function to decrease it until it hits base value of 2
li $t8 0
beq $t7 $t8 END_DECREASE_VELOCITY_LOOP


jal RESPOND_TO_s

j DECREASE_VELOCITY_LOOP

END_DECREASE_VELOCITY_LOOP:


lw $t0 ($sp)
lw $t5 4($sp)
lw $t4 8($sp)
lw $ra 12($sp)



NOT_MY_MOTOR:

addi $sp $sp 16



j SET_COORD_STACK










#CHECK KEYBOARD INPUT

CHECK_KEYBOARD:

li $t9, 0xffff0000 
lw $t8, 0($t9) 
beq $t8, 1, KEYPRESS_HAPPENED
#Reset x velocity to 0

sw $0 myCarXVelocity

jr $ra

KEYPRESS_HAPPENED:
sw $0 ($t9)
lw $t2, 4($t9) # this assumes $t9 is set to 0xfff0000  
beq $t2, 0x61, RESPOND_TO_a # ASCII code of 'a' is 0x61 or 97 in decimal
beq $t2, 0x73, RESPOND_TO_s
beq $t2, 0x64, RESPOND_TO_d
beq $t2, 0x77, RESPOND_TO_w
beq $t2, 0x71, RESPOND_TO_q

jr $ra

RESPOND_TO_a:
lw $t2 myCarXVelocity
addi $t2 $t2 -1
sw $t2 myCarXVelocity
jr $ra

RESPOND_TO_d:
lw $t2 myCarXVelocity
addi $t2 $t2 1
sw $t2 myCarXVelocity
jr $ra





RESPOND_TO_s:

#Reset x velocity to 0


sw $0 myCarXVelocity

lw $t2 myCarYVelocity
addi $t2 $t2 -1
beq $t2 -3 LOWER_LIMIT #makes sure Y velocity never goes below 1

sw $t2 myCarYVelocity

lw $t2 scoreInterval
addi $t2 $t2 1
sw $t2 scoreInterval #make it take longer for score to increase


sw $ra -4($sp)
la $t2 truckYVelocity
sw $t2 -8($sp)
lw $t2 truckCoords
sw $t2 -12($sp)
li $t2 1
sw $t2 -16($sp)
addi $sp $sp -16
jal DIRECTIONAL_VELOCITY_EDIT



la $t2 tankYVelocity
sw $t2 -4($sp)
lw $t2 tankCoords
sw $t2 -8($sp)
li $t2 1
sw $t2 -12($sp)
addi $sp $sp -12
jal DIRECTIONAL_VELOCITY_EDIT




la $t2 lamboYVelocity
sw $t2 -4($sp)
lw $t2 lamboCoords
sw $t2 -8($sp)
li $t2 1
sw $t2 -12($sp)
addi $sp $sp -12
jal DIRECTIONAL_VELOCITY_EDIT


la $t2 motorbikeYVelocity
sw $t2 -4($sp)
lw $t2 motorbikeCoords
sw $t2 -8($sp)
li $t2 1
sw $t2 -12($sp)
addi $sp $sp -12
jal DIRECTIONAL_VELOCITY_EDIT


la $t2 gokartYVelocity
sw $t2 -4($sp)
lw $t2 gokartCoords
sw $t2 -8($sp)
li $t2 1
sw $t2 -12($sp)
addi $sp $sp -12
jal DIRECTIONAL_VELOCITY_EDIT



la $t2 exlifeYVelocity
sw $t2 -4($sp)
lw $t2 exlifeCoords
sw $t2 -8($sp)
li $t2 1
sw $t2 -12($sp)
addi $sp $sp -12
jal DIRECTIONAL_VELOCITY_EDIT




la $t2 invinceYVelocity
sw $t2 -4($sp)
lw $t2 invinceCoords
sw $t2 -8($sp)
li $t2 1
sw $t2 -12($sp)
addi $sp $sp -12
jal DIRECTIONAL_VELOCITY_EDIT





lw $ra ($sp)
addi $sp $sp 4



jr $ra







LOWER_LIMIT:
addi $t2 $t2 1
sw $t2 myCarYVelocity
jr $ra





RESPOND_TO_w:



lw $t2 myCarYVelocity
addi $t2 $t2 1
beq $t2 6 UPPER_LIMIT #makes sure Y velocity never goes above 7

sw $t2 myCarYVelocity
lw $t2 scoreInterval
addi $t2 $t2 -1
sw $t2 scoreInterval #make it take longer for score to increase

ONLY_MOVE_SCREEN_DOWN: # making it so that car doesn't go up until u are at speed 4 #MOVED FUNCTIONALITY TO CALC
#making a function that accepts a vehicles y velocity and x coordinate as parameters
#if x coordinate less than 32 then increase y velocity by 1... otherwise decrease it by 1


sw $ra -4($sp)
la $t2 truckYVelocity
sw $t2 -8($sp)
lw $t2 truckCoords
sw $t2 -12($sp)
li $t2 -1
sw $t2 -16($sp)
addi $sp $sp -16
jal DIRECTIONAL_VELOCITY_EDIT

la $t2 tankYVelocity
sw $t2 -4($sp)
lw $t2 tankCoords
sw $t2 -8($sp)
li $t2 -1
sw $t2 -12($sp)
addi $sp $sp -12
jal DIRECTIONAL_VELOCITY_EDIT


la $t2 lamboYVelocity
sw $t2 -4($sp)
lw $t2 lamboCoords
sw $t2 -8($sp)
li $t2 -1
sw $t2 -12($sp)
addi $sp $sp -12
jal DIRECTIONAL_VELOCITY_EDIT

la $t2 motorbikeYVelocity
sw $t2 -4($sp)
lw $t2 motorbikeCoords
sw $t2 -8($sp)
li $t2 -1
sw $t2 -12($sp)
addi $sp $sp -12
jal DIRECTIONAL_VELOCITY_EDIT

la $t2 gokartYVelocity
sw $t2 -4($sp)
lw $t2 gokartCoords
sw $t2 -8($sp)
li $t2 -1
sw $t2 -12($sp)
addi $sp $sp -12
jal DIRECTIONAL_VELOCITY_EDIT


la $t2 exlifeYVelocity
sw $t2 -4($sp)
lw $t2 exlifeCoords
sw $t2 -8($sp)
li $t2 -1
sw $t2 -12($sp)
addi $sp $sp -12
jal DIRECTIONAL_VELOCITY_EDIT


la $t2 exlifeYVelocity
sw $t2 -4($sp)
lw $t2 exlifeCoords
sw $t2 -8($sp)
li $t2 -1
sw $t2 -12($sp)
addi $sp $sp -12
jal DIRECTIONAL_VELOCITY_EDIT








lw $ra ($sp)
addi $sp $sp 4
jr $ra








DIRECTIONAL_VELOCITY_EDIT:


lw $t2 ($sp) #gets whether we were originally going up (1) or down (-1)
lw $t1 4($sp) #gets x coordinate from stack
lw $t0 8($sp) #gets y velocity address from stack

addi $sp $sp 12

lw $t4 ($t0)


li $t3 32

blt $t1 $t3 DIRECTIONAL_INCREASE #directional increase if x coord less than 32
add $t4 $t4 $t2
sw $t4 ($t0)
jr $ra

DIRECTIONAL_INCREASE:

sub $t4 $t4 $t2
bge $t4 1 NO_NEED_TO_SET_BASE_VELOCITY2 #if y velocity for car moving in opposite lane is less than 1 then set it to 1
li $t4 1
NO_NEED_TO_SET_BASE_VELOCITY2:
sw $t4 ($t0)
jr $ra









UPPER_LIMIT:
addi $t2 $0 6
sw $t2 myCarYVelocity
jr $ra

RESPOND_TO_q:
j EXIT







#CHECK KEYBOARD IN NON-GAME SCREENS


#CHECK KEYBOARD INPUT

CHECK_KEYBOARD2:

li $t9, 0xffff0000 
lw $t8, 0($t9) 
beq $t8, 1, KEYPRESS_HAPPENED2

jr $ra

KEYPRESS_HAPPENED2:
sw $0 ($t9)
lw $t2, 4($t9) # this assumes $t9 is set to 0xfff0000  
beq $t2, 0x70, RESPOND_TO_p # ASCII code of 'p' is 0x70
beq $t2, 0x71, RESPOND_TO_q

jr $ra

RESPOND_TO_p:
j START_GAME


COLLISION_HANDLER_2:
#plan take 4 arguments
#first 2 arguments are my car address and size
#next 2 are other vehicle's address and size

#check each corner 



jr $ra




#Collision function
#current plan is to spawn cars smartly so that 2 cars don't crash eachother in same lane
#then i can only care about my car's collision

#2 possible method

COLLISION_HANDLER:

#plan : modular function with arguments as follows
#argument 1: car bg address
#argument 2: car address
#argument 3: car size
#argument 4: power_up vs my car flag ... power up == 0, my car == 1
#argument 5: x coordinate to check if i should go through things backwards

lw $t0 ($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t6 16($sp)

addi $sp $sp 20

beqz $t3 POWER_UP_CHECK
lw $t4 invincibilityFrames
bgtz $t4 OFF_DISPLAY_COLLIDE # if we have i-frames don't bother checking my car

POWER_UP_CHECK:

bgt $t1 0x1000C000 OFF_DISPLAY_COLLIDE #does not check collision of out of bounds
blt $t1 0x10008500 OFF_DISPLAY_COLLIDE

mult $t2 $t2
mflo $t4 #size of car squared in t4

li $t5 0
li $t7 0 
li $t8 0

bnez $t3 MY_CAR_COLLISION_SHENANS
li $t3 4

bge $t6 32 COLLISION_CHECK_LOOP #no need to flip ends on right lanes
li $t3 -4 #decrements instead of increments
add $t0 $t0 $t4 #sets t0 to address of end of array
add $t0 $t0 $t4 #sets t0 to address of end of array
add $t0 $t0 $t4 #sets t0 to address of end of array
add $t0 $t0 $t4 #sets t0 to address of end of array
subi $t0 $t0 4 #minus 4 for 0 indexing
j COLLISION_CHECK_LOOP

MY_CAR_COLLISION_SHENANS:
li $t3 4

COLLISION_CHECK_LOOP:
beq $t5 $t4 OFF_DISPLAY_COLLIDE #if we get to the end then no collision

#load element in car array
lw  $t9 ($t0) 
lw $t8 ($t1)

beq $t9 1 COLLISION_INCREMENTERS
bne $t8 $t9 COLLISION_OCCUR



COLLISION_INCREMENTERS:
add $t0 $t0 $t3 #increment/decrement array by 4
addi $t1 $t1 4 #increment address by 4
addi $t5 $t5 1
addi $t7 $t7 1
beq $t7 $t2 NEW_COLLISION_ROW

j COLLISION_CHECK_LOOP

NEW_COLLISION_ROW:
addi $t1 $t1 256 #adds (4 + 4(63) = 4(64) ) - 4(car size to skip to next row in array)
sub $t1 $t1 $t2
sub $t1 $t1 $t2
sub $t1 $t1 $t2
sub $t1 $t1 $t2
li $t7 0 

j COLLISION_CHECK_LOOP


# loop through car bg array
#properly incremement through size

#if any colour that is not 1 does not match up
#throw a fit and push 0 to the stack as boolean false, the only return value

OFF_DISPLAY_COLLIDE:
sw $0 -4($sp)
addi $sp $sp -4
jr $ra

COLLISION_OCCUR:
li $t1 1
sw $t1 -4($sp)
addi $sp $sp -4
jr $ra







HANDLE_SPAWNS:



#Spawning function
lw $t0 spawnTicker
lw $t1 spawnInterval

bne $t0 $t1 WAIT_NO_SPAWN #if ticker does not match interval do nothing
#else
li $t0 0 
sw $t0 spawnTicker #sets spawnTicker to 0
#generate 2 random numbers... a random position (start of lane) and a random vehicle id
#set the vehicle address and default to the position specified 
sw $ra -4($sp)
addi $sp $sp -4 #push ra onto stack to facilitate nested call

lw $t6 recentLane


REPEAT_LANE:

jal CHOOSE_RANDOM_LANE

lw $t4 ($sp)
addi $sp $sp 4 #loads random lane fetched into t4
beq $t4 $t6 REPEAT_LANE #if t4 = t6 then we are repeating a lane and should try again

sw $t4 recentLane #stores last spawned on lane


lw $t7 myCarYVelocity
sub $t8 $0 $t7 
li $t6 35
bgt $t4 0x1000c040 RIGHT_HALF_SPAWN
add $t8 $t0 $t7
li $t6 10
RIGHT_HALF_SPAWN:

jal CHOOSE_RANDOM_VEHICLE



lw $t5 ($sp)
addi $sp $sp 4 #loads random car fetched into t5

lw $ra ($sp) #gets back old ra
addi $sp $sp 4

#Massive if statement depending on which car it is...
#have to hard code





beq $t5 0 SPAWN_TRUCK
beq $t5 1 SPAWN_TANK
beq $t5 2 SPAWN_LAMBO
beq $t5 3 SPAWN_MOTORBIKE
beq $t5 4 SPAWN_GOKART
beq $t5 5 SPAWN_EXLIFE
beq $t5 6 SPAWN_INVINCE

jr $ra




SPAWN_TRUCK:
lw $t0 truckAddress
bgt $t0 0x10010F00 TRUCK_SPAWN #does not spawn truck if address is in bounds
bgt $t0 0x1000c000 NO_TRUCK_SPAWN
TRUCK_SPAWN:
li $t1 0 #default y velocity
add $t1 $t1 $t8 #adds my y velocity (plus or minus depending on direction)
sw $t1 truckYVelocity
sw $0 truckCoords+4
sw $t4 truckAddress
sw $t6 truckCoords
NO_TRUCK_SPAWN:
jr $ra

SPAWN_TANK:
lw $t0 tankAddress
bgt $t0 0x10010F00 TANK_SPAWN #does not spawn truck if address is in bounds
bgt $t0 0x1000c000 NO_TANK_SPAWN
TANK_SPAWN:
li $t1 -1
add $t1 $t1 $t8 #adds my y velocity (plus or minus depending on direction)
sw $t1 tankYVelocity
sw $0 tankCoords+4
sw $t4 tankAddress
sw $t6 tankCoords
NO_TANK_SPAWN:
jr $ra

SPAWN_LAMBO:
lw $t0 lamboAddress
bgt $t0 0x10010F00 L_SPAWN #does not spawn if address is in bounds
bgt $t0 0x1000c000 NO_L_SPAWN
L_SPAWN:
li $t1 1
add $t1 $t1 $t8 #adds my y velocity (plus or minus depending on direction)
sw $t1 lamboYVelocity
sw $0 lamboCoords+4
sw $t4 lamboAddress
sw $t6 lamboCoords
NO_L_SPAWN:
jr $ra

SPAWN_MOTORBIKE:
lw $t0 motorbikeAddress
bgt $t0 0x10010F00 M_SPAWN #does not spawn if address is in bounds
bgt $t0 0x1000c000 NO_M_SPAWN
M_SPAWN:
li $t1 0
add $t1 $t1 $t8 #adds my y velocity (plus or minus depending on direction)
sw $0 motorbikeCoords+4
sw $t4 motorbikeAddress
sw $t6 motorbikeCoords
NO_M_SPAWN:
jr $ra

SPAWN_GOKART:
lw $t0 gokartAddress
bgt $t0 0x10010F00 G_SPAWN #does not spawn if address is in bounds
bgt $t0 0x1000c000 NO_G_SPAWN
G_SPAWN:
sw $0 gokartCoords+4
li $t1 0
add $t1 $t1 $t8 #adds my y velocity (plus or minus depending on direction)
sw $t1 gokartYVelocity
sw $t4 gokartAddress
sw $t6 gokartCoords
NO_G_SPAWN:
jr $ra


SPAWN_EXLIFE:
lw $t0 exlifeAddress
bgt $t0 0x10010F00 E_SPAWN #does not spawn if address is in bounds
bgt $t0 0x1000c000 NO_G_SPAWN
E_SPAWN:
li $t1 0
add $t1 $t1 $t8 #adds my y velocity (plus or minus depending on direction)
sw $t1 exlifeYVelocity
sw $0 exlifeCoords+4
sw $t4 exlifeAddress
sw $t6 exlifeCoords
jr $ra

SPAWN_INVINCE:
lw $t0 invinceAddress
bgt $t0 0x10010F00 I_SPAWN #does not spawn if address is in bounds
bgt $t0 0x1000c000 NO_G_SPAWN
I_SPAWN:
li $t1 1
add $t1 $t1 $t8 #adds my y velocity (plus or minus depending on direction)
sw $t1 invinceYVelocity
sw $0 invinceCoords+4
sw $t4 invinceAddress
sw $t6 invinceCoords
jr $ra





WAIT_NO_SPAWN:
lw $t0 spawnTicker
addi $t0 $t0 1
sw $t0 spawnTicker #incrememnts spawnTicker
jr $ra

CHOOSE_RANDOM_LANE:
li $v0, 42       # Service 42, random int range
li $a0, 0          # Select random generator 0
li $a1, 4	   #Set upper limit to 4
syscall            # Generate random int (returns in $a0)

li $v0, 1  # Service 1, print int
syscall    # Print previously generated random int

sll $a0 $a0 2
lw $a0 randomLaneAddresses($a0)
sw $a0 -4($sp)
addi $sp $sp -4

jr $ra

CHOOSE_RANDOM_VEHICLE:
li $v0, 42         # Service 41, random int range
li $a0, 0          # Select random generator 0
li $a1, 7	   #Set upper limit to 4
syscall            # Generate random int (returns in $a0)

li $v0, 1  # Service 1, print int
syscall    # Print previously generated random int

sw $a0 -4($sp)
addi $sp $sp -4

jr $ra




#Invincibility Handler
INVINCIBILITY_HANDLER:
lw $t0 invincibilityFrames
blez $t0 NO_SUBTRACT_NEEDED
addi $t0 $t0 -1
sw $t0 invincibilityFrames

NO_SUBTRACT_NEEDED: #we have 0 i-frames so do not decrement
jr $ra


#SLEEP SECTION
SLEEP_FRAMES: #sleep for sleep constant milliseconds then return
addi $v0 $0 32
lw $a0 SLEEP_CONSTANT 
syscall
jr $ra


LEVEL_TWO:

la $t0 levelTwoScreen
sw $t0 -4($sp)
lw $t0 displayAddress
sw $t0 -8($sp)
li $t0 4096
sw $t0 -12($sp)
addi $sp $sp -12
jal DRAW_BG #draws screen to show level advancement

addi $v0 $0 32
li $a0 1500 #waits 3.5 secs befor starting second level
syscall


li $t0 2
sw $t0 life

li $t0 0
sw $t0 score
#reset all other cars
lw $t0 myCarDefaultAddress
sw $t0 myCarAddress
lw $t0 myCarDefaultCoords
sw $t0 myCarCoords
lw $t0 myCarDefaultCoords+4
sw $t0 myCarCoords+4

lw $t0 truckDefaultAddress
sw $t0 truckAddress

lw $t0 tankDefaultAddress
sw $t0 tankAddress

lw $t0 lamboDefaultAddress
sw $t0 lamboAddress

lw $t0 motorbikeDefaultAddress
sw $t0 motorbikeAddress

lw $t0 gokartDefaultAddress
sw $t0 gokartDefaultAddress

lw $t0 exlifeDefaultAddress
sw $t0 exlifeAddress

lw $t0 invinceDefaultAddress
sw $t0 invinceAddress

li $t0 20
sw $t0 spawnInterval

li $t0 15
sw $t0 invincibilityConstant



j START_GAME

GAME_OVER:

#wait for q or p to be pressed
la $t0 gameOverScreen
sw $t0 -4($sp)
lw $t0 displayAddress
sw $t0 -8($sp)
li $t0 4096
sw $t0 -12($sp)
addi $sp $sp -12
jal DRAW_BG

li $v0, 4
la $a0, str2 #loads the address of the string str ("we are game looping LOL") into a0
syscall 

li $t0 3
sw $t0 life
li $t0 0
sw $t0 score
lw $t0 myCarDefaultAddress
sw $t0 myCarAddress
lw $t0 myCarDefaultCoords
sw $t0 myCarCoords
lw $t0 myCarDefaultCoords+4
sw $t0 myCarCoords+4

lw $t0 truckDefaultAddress
sw $t0 truckAddress

lw $t0 tankDefaultAddress
sw $t0 tankAddress

lw $t0 lamboDefaultAddress
sw $t0 lamboAddress

lw $t0 motorbikeDefaultAddress
sw $t0 motorbikeAddress

lw $t0 gokartDefaultAddress
sw $t0 gokartDefaultAddress

lw $t0 exlifeDefaultAddress
sw $t0 exlifeAddress

lw $t0 invinceDefaultAddress
sw $t0 invinceAddress



j OPENING_SCREEN_LOOP



EXIT:
li $v0 10
syscall




